generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  username String @unique
  password String
  photo    String
  location String
  email    String? @unique
  groups   Group[]

  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model Group {
  id       Int    @id @default(autoincrement())
  name     String
  img      String
  members  User[]
  posts    Post[]
}

model Post {
  id          Int    @id @default(autoincrement())
  title       String
  img         String
  description String
  group       Group  @relation(fields: [groupID], references: [id], onDelete: Cascade)
  groupID     Int
}

model Account {
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@id([provider, providerAccountId])
}
 
model Session {
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
 
model VerificationToken {
  identifier String
  token      String
  expires    DateTime
 
  @@id([identifier, token])
}